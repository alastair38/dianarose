@media #{$large-and-up} {
// .home main {
//   margin-top: 2rem;
// }
}

main.container {
  margin: 2rem auto 0 auto;
}

.container {
  margin: 0 auto;
  max-width: 1280px;
  width: 85%;
}
@media #{$medium-and-up} {
  .container {
    width: 85%;
  }
}
@media #{$large-and-up} {
  .container {
    width: 70%;
  }
}
.col .row {
  margin-left: (-1 * $gutter-width / 2);
  margin-right: (-1 * $gutter-width / 2);
}

.row {
  &.no-margin-bot {
    margin-bottom: 0;
  }
  &.block {
    margin-bottom: 0;
    padding: 5rem 0;
    &.workstreams {
      padding: 2rem 0;
    }
    &.social-cta {
      background: $primary-color;
      color: $neutral-light;
    }
    &.cta-wrapper {
      padding: 3rem 0;
    }
    &.statement {
      //background-color: #ff4747;
      color: color("grey", "darken-4");
      background-color: transparent;
      background-repeat: no-repeat;
      background-position: left 45%;
      background-size: cover;
      padding: 10rem 2rem;
      @media #{$large-and-up} and (min-resolution: 120dpi) {
        padding: 12rem 2rem;
      }
      @media only screen and (min-width : 1441px) {
        padding: 14rem 2rem;
      }
      @media only screen and (min-width : 1750px) {
        padding: 20rem 2rem;
      }
      @media only screen and (min-width : 2750px) {
        padding: 24rem 2rem;
      }
      @media only screen and (min-width : 3440px) {
        padding: 28rem 2rem;
      }
      @media #{$medium-and-down} {
        background-position: left center;
        .offset-s6 {
          margin-left: 0;
          width: 100%;
        }
    }
      @media #{$small-and-down} {
        padding: 5rem 2rem;
      }
      h1 {
        padding: 1rem;
        font-weight: 400;
        display: inline-block;
        border-radius: 3px;
        margin: 0; //initial;
        position: relative;
        background: rgba(255,255,255,0.75);
        @media #{$small-and-down} {
          font-size: 2.2rem;
        }

        // &:after, &:before {
        //   content: '';
        //   position: absolute;
        //   width: 70%;
        //   height: .25rem;
        //   border-radius: 5px;
        //   background: color("blue", "lighten-3");
        // }
        // &:after {
        //   bottom: 0;
        //   right: 0;
        // }
        // &:before {
        //   top: 0;
        //   left: 0;
        // }
        span {
          font-size: 1.15rem;
          line-height: 1.5;
          padding: 0 0 .5rem .3rem;
          display: block;
          text-transform: none;
          font-weight: 300;
        }
      }
    }
    h2 {
      margin-top: 0;
    }
  }
}

// CTA block

h2.cta-header-text {
  @media #{$small-and-down} {
    font-size: 1.3rem;
  }
}

.cta-image {
  padding-bottom: 2rem;
    img {
      width: 200px;
      @media #{$small-and-down} {
        width: 150px;
      }
    }
}

.cta-action {
  margin-block-end: 0;
}

.section, .row .col {
  padding-top: 1rem;
  padding-bottom: 1rem;

  &.no-pad {
    padding: 0;
  }
  &.no-pad-bot {
    padding-bottom: 0;
  }
  &.no-pad-top {
    padding-top: 0;
  }
}

// Built-in block styles

.wp-block-cover {
  margin-bottom: 2rem;
}

.wp-block-separator {
  margin: 2rem auto;
  width: 70%;
}

// Default article Header
.article-header {
  padding-top: 2rem;
  h1 {
    text-decoration: underline;
    -webkit-text-decoration-color: $accent-color; /* Safari */
    text-decoration-color: $accent-color;
    text-decoration-thickness: 5px;
  }
}

.single-library .article-header h1 {
  text-decoration: none;
}

.archive-header {
  padding-top: 2rem;
  h1 {
    text-decoration: underline;
    -webkit-text-decoration-color: $accent-color; /* Safari */
    text-decoration-color: $accent-color;
    text-decoration-thickness: 5px;
  }
}

.archive-desc {
  padding-bottom: 2rem;
}

.search-header {
  padding: 0;
  .search-query {
  //  border-bottom: 3px solid $accent-color;
  }
}


// Workstreams grid

.block.workstreams {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 1rem;
  article {
    display: flex;
  }
  h2 {
    grid-column: 1/-1;
  }
  @media #{$medium-and-down} {
    grid-template-columns: 1fr 1fr;
  }
  @media #{$small-and-down} {
    grid-template-columns: 1fr;
    grid-gap: 0rem;
  }
}

// Library block

.row.block.library-latest {
  padding: 5rem 0 0 0;
  .library-list {
    padding-top: 1rem;
  }
}
//Asides

// aside h2, .related-info-block h2 {
//   border-bottom: 3px solid $accent-color;
// }

//Footer

:not(.home) > footer.page-footer {
  margin-top: 2rem;
}

// Twitter feed

#ctf {
  margin: auto;
  padding: 2rem 0;
}

.ctf-out-of-tweets .twitter-share-button, .ctf-out-of-tweets .twitter-follow-button {
  display: none !important;
}

// Lists

ul#contact {
  display: flex;
  justify-content: center;
  flex-direction: row;
  text-align: center;
  list-style-type: none;
  li {
    padding: 0 1.5rem;
    a {
      &:hover, &:focus {
        color: $link-hover-color;
        svg {
          fill: $link-hover-color;
        }
      }
    }
  }
}

// Byline / tags

span.byline, span.library-tags {
  display: inline-flex;
  align-items: center;
  margin-right: 1rem;
  a {
    padding-left: .5rem;
    &:hover, &:focus {
      color: $link-hover-color;
    }
  }

  svg {
    fill: $accent-color;
  }
}

span.byline svg {
  margin-right: .5rem;
}

// Share links

ul.share-links.center.columns {
  display: flex;
  list-style-type: none;
  padding: 0;
  border-radius: 3px;
  margin-top: 0;
    li {
        padding: .25rem 1rem .25rem 0;
        a {
            &:hover, &:focus {
              color:$link-hover-color;
              svg.icon {
                fill: $accent-color;
                background: transparent;
              }
            }
            svg.icon {
              background: $accent-color;
              color: white;
              border: 1px solid $accent-color;
              display: inline-block;
              height: 2rem;
              width: 2rem;
              padding: .5rem;
              margin: 0;
              border-radius: 50%;
            }
        }
    }
}

// Mixins to eliminate code repitition
@mixin reset-offset {
  margin-left: auto;
  left: auto;
  right: auto;
}
@mixin grid-classes($size, $i, $perc) {
  &.offset-#{$size}#{$i} {
    margin-left: $perc;
  }
  &.pull-#{$size}#{$i} {
    right: $perc;
  }
  &.push-#{$size}#{$i} {
    left: $perc;
  }
}


.row {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 20px;

  // Clear floating children
  &:after {
    content: "";
    display: table;
    clear: both;
  }

  .col {
    float: left;
    box-sizing: border-box;
    padding: 0 $gutter-width / 2;
    min-height: 1px;

    &[class*="push-"],
    &[class*="pull-"] {
      position: relative;
    }

    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      &.s#{$i} {
        width: $perc;
        @include reset-offset;
      }
      $i: $i + 1;
    }

    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      @include grid-classes("s", $i, $perc);
      $i: $i + 1;
    }

    @media #{$medium-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.m#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("m", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$large-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.l#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1;
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("l", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$extra-large-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.xl#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1;
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("xl", $i, $perc);
        $i: $i + 1;
      }
    }
  }
}
